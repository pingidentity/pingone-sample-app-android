apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'


android {
    compileSdk 34
    /*
     * The namespace is initially set to the package name you choose when you create your project.
     * While building your app into the final application package (APK), the Android build tools
     * use the namespace as the namespace for your app's generated R class, which is used to access
     * your app resources.
     * See more at https://developer.android.com/build/configure-app-module#set-namespace
     */
    namespace 'com.pingidentity.pingone'
    defaultConfig {
        applicationId "com.pingidentity.pingone"
        minSdkVersion 26
        targetSdkVersion 34
        versionCode = 22
        versionName "1.11.0"

        // Make sure this is consistent with the redirect URI used in res/raw/auth_config.json,
        // or specify additional redirect URIs in AndroidManifest.xml
        manifestPlaceholders = [
                'appAuthRedirectScheme': 'pingonesdk://sample'
        ]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "OIDC_ISSUER", OIDC_ISSUER
        buildConfigField "String", "CLIENT_ID", CLIENT_ID
        buildConfigField "String", "SCOPE", SCOPE
        buildConfigField "String", "OIDC_REDIRECT_URI", OIDC_REDIRECT_URI
        buildConfigField "String", "PASSKEYS_ENVIRONMENT_ID", PASSKEYS_ENVIRONMENT_ID
        buildConfigField "String", "PASSKEYS_CLIENT_ID", PASSKEYS_CLIENT_ID
        buildConfigField "String", "PASSKEYS_RP_ID", PASSKEYS_RP_ID
        buildConfigField "String", "PASSKEYS_ENDPOINT_PREFIX", PASSKEYS_ENDPOINT_PREFIX

        /*
         * This is the variable that is injected into build config, while building the application.
         * If you want to use the Android Device Verification feature you should assign a value to
         * this variable in the gradle.properties file. Access this value from the application in the
         * following way:
         * String googleCloudProjectNumber = BuildConfig.GOOGLE_CLOUD_PROJECT_NUMBER;
         */

        buildConfigField("String", "GOOGLE_CLOUD_PROJECT_NUMBER", "${google_cloud_project_number}")
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
        }
    }

}
dependencies {
    /*
     * import the PingOne for Customer Android SDK. Get the latest version from
     * https://search.maven.org/search?q=g:com.pingidentity.pingonemfa
     */
    implementation 'com.pingidentity.pingonemfa:android-sdk:1.11.0'
    /*
     * import the PingOne for Customer Mobile Authentication Framework
     */
    implementation project(':PingAuthenticationUI')

    /*
     * Credential Manager APIs allow a passkey to be stored securely on the device.
     */
    implementation "androidx.credentials:credentials:1.2.0"
    // optional - needed for credentials support from play services, for devices running
    // Android 13 and below.
    implementation "androidx.credentials:credentials-play-services-auth:1.2.0"

    /*
     * OkHttp is a third-party library developed by Square for sending and receive HTTP-based
     * network requests.
     */
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    //Import the Firebase BoM (Bill of Materials)
    implementation platform('com.google.firebase:firebase-bom:32.2.3')
    //FireCloud Messaging Services
    implementation 'com.google.firebase:firebase-messaging'

    //Google's gSon library to build and parse JSON format
    implementation 'com.google.code.gson:gson:2.10.1'

    /*
     * Play Integrity API library
     */
    implementation 'com.google.android.play:integrity:1.2.0'

    //to manage lifecycle easily
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment:2.7.3'

    /*
     * To easily build cameraX preview
     */
    implementation 'androidx.camera:camera-camera2:1.2.3'
    implementation 'androidx.camera:camera-lifecycle:1.2.3'
    implementation 'androidx.camera:camera-view:1.3.0-rc02'

    /*
     * ML Kit is a mobile SDK that brings Google's on-device machine learning expertise to a device
     * ML Kit's APIs all run on-device, allowing for real-time use cases where you want to process
     * a live camera stream. This also means that the functionality is available offline.
     */
    implementation 'com.google.mlkit:barcode-scanning:17.2.0'

    /*
     * AppAuth for Android is a client SDK for communicating with OAuth 2.0 and OpenID Connect providers
     * for versions look at https://bintray.com/openid/net.openid/appauth#
     */
    implementation 'net.openid:appauth:0.11.1'
    
    /* EnableHuaweiMobileServices
    // Push kit HMS Core SDK
    implementation 'com.huawei.hms:push:6.3.0.302'
    EnableHuaweiMobileServices */

    testImplementation 'junit:junit:4.13.2'
}
apply plugin: 'com.google.gms.google-services'
/* EnableHuaweiMobileServices
apply plugin: 'com.huawei.agconnect'
EnableHuaweiMobileServices */

